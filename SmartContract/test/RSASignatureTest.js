const PoseManager = artifacts.require("PoseManager_RSA");

//To store evaluation results
let gasLog = [];

contract("Manager contract", async accounts => {

  //Evaluate the registration
  it("register", async () => {

    let instance, receipt, result, tx;

    //RSA public key
    let N = "0xBF0C3A0DF9551E2CCE270FF8AF13E6FCC879B4FB2910FA40283C8E075F1B3E61D8EDC99EEED97131B2CBBA8C4A77682FE1B1D12BE775EB7C8D59F59B69606D7DF18ED93F635875530D7DFC182010A31BB447DDB8519852DE08919A51675A548BBE5DD4EA0B97138EFBF74E5ED133AD4DB512C152910DF0F4090CEB05A98009C9E6C3D27B7D2A39DD265DFEB1AE764ECF7126048F5D263B2C17734B750D0FC158FD2D8429D20D0CF96B79DF481317427017854FAD52FFAEFB784757796FDA0F218AAF9F4F44F0D316EC3824FE887C3A8556AE18495D17548B63D7224E7A37A22BB5BBE09C36CDBC87761909A46E646215CBA0B7C36E798671D1B0C5C98A900459";
    let e = "0x03";

    //Some dummy encryption key
    let dummyEncryptionKey = "0x4242424242424242424242424242424242424242424242424242424242424242";

    //Attestation strings for the 10 accounts := abi.encodePacked("Pose-Attest", hash(POSE Program), enclave address, encave encryption key) //The encryption key is the dummy encryption key
      //The 10 accounts are the ones generated by ganache-cli -d
    //Hard coded as web3js does not know abi.encodePacked
    let preimages = ["0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdf90f8bf6a479f320ead074411a4b0e7944ea8c9c14242424242424242424242424242424242424242424242424242424242424242",
    "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdfffcf8fdee72ac11b5c542428b35eef5769c409f04242424242424242424242424242424242424242424242424242424242424242",
    "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdf22d491bde2303f2f43325b2108d26f1eaba1e32b4242424242424242424242424242424242424242424242424242424242424242",
    "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdfe11ba2b4d45eaed5996cd0823791e0c93114882d4242424242424242424242424242424242424242424242424242424242424242",
     "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdfd03ea8624c8c5987235048901fb614fdca89b1174242424242424242424242424242424242424242424242424242424242424242",
     "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdf95ced938f7991cd0dfcb48f0a06a40fa1af46ebc4242424242424242424242424242424242424242424242424242424242424242",
     "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdf3e5e9111ae8eb78fe1cc3bb8915d5d461f3ef9a94242424242424242424242424242424242424242424242424242424242424242",
     "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdf28a8746e75304c0780e011bed21c72cd78cd535e4242424242424242424242424242424242424242424242424242424242424242",
     "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdfaca94ef8bd5ffee41947b4585a84bda5a3d3da6e4242424242424242424242424242424242424242424242424242424242424242",
     "0x506f73652d4174746573740a28e9ffef0073f9a6a674cf57ee77307f38f0f1bebb087888d9011ed0eeefdf1df62f291b2e969fb0849d99d9ce41e2f137006e4242424242424242424242424242424242424242424242424242424242424242"];

     //Signatures on all of the 10 attestation strings
    let signatures =
    ["0x583a1d6ae990a637b70903ec743c5f85e8f952310807305380714a9af54b9ec08e7923356645bf9be2c45bb02b10f8db769e901d45ceaaee95acc905d1da5fe3fc8da3d1ff2ad04e98838220259cecda1f2f660b40b013632a8ca43101cf87109f1027f30bfd53e274dcc38675254ad6b43452b70832c193aac3daba9e9cea09e3cc888cde6970a804517bca3cc2705ce8e1cff3709f0e67d867b370c0d1caf05ec99237f5f4d2d530d219e37737d75a390c4bda6a2716f7c3d9ea29f7a2dd9bdc246f44aea0d07fb2e25c3546e4f805f93fd5c7d578725ee07c317c4d3c3f00d61ae81a1e2853d767443417201d96cec6dd180ba24175d63322b16248e1633f",
    "0x451d69cac2fb1f608ee880dea4bf08fa9ab6064a168483c3a0150ed76dbb224565f509f74d806f7771513e8b91adda560074150585e1603d2a867c07f8655284892c3c9808adedbda5a6c70cc0395d4eff331ce48180d55b34ca07c30602ea156d4287ddfdab1424547b80d39056dc0b6f6e0851ddcd8e2d27c13aca096156292fb40ec87da27d89ea12319fd1fb3e63637d19c273ce80805426fad1e55415fe76b9faeb9227e7a3370469d4376cce86178561c9c8295f4f9eb3844a210a9db8d8c37e230b491a0d3225f5f559fbf8ec7416cefbc53dadf830944c171063288940b2ecf5f53685ff4ff00f0b590a4c197f543a1edac3ba5feebca9a7f54af04c",
    "0x0dbc2fdde23e716ae469b34eb6b724e003ebe4d6c993a934156a33fcece9fd772bde6531a71cc1616c62dcd1ec81f90b543b81a935ce950ee215cb5b410d8b0dff6d82c8bb1bd3d5440ed7aeb755ac3688d224d74004ed86dafacb852e3a788cfbc4c073767d69cb9df4850f47d808769acf895b528db7970cf3a763b5df1c7120f362afc2ba498731427f03f56cb1264d39fcc3d083f2a99c3d12f278e432a868f38eb79f2bf5527663596dcdbaf1eb7934ae794ab2617f9140103fee3905b60d1ae13626b8d757aff2f06de8a3639433ad63604d542fa94b52b2547d28e64c82b08ea0f8bb9059b28abe803c89376ecfad9f90b486eb68d259958fd2774b12",
    "0x74c321cd6e32ab7bd6a9b783453e5091a6624ca86adcfd64046ce4681aaf03c4f1bc0d941cadf27962f9c1a43ffc92a54cfcdf4541e69d3e8c40f54985125fc5761f25f73bc244e589e9304a0a58c1275ec80d48e848e9a613f4159be00c5617da288b5813835ba329ec81e0f14157c9b890cdc80d53609e76c3f4037e58a0ed3631b4d93980a7c51a3bd5b474149876d18b016e2eb7e8403fd952492bdeb544a10e2ff1c2b094803ac6816e644575fb0810d6a3d267c3d84d4fca65c22b5bbcc564c60db21adbe308d9fb59b2bd13d33067105b52fdaf8007a230e75d8c2212088d88eb33dff685b68705f256bb6d57b568165443e64bc7f6c71b7650efaa53",
    "0xa9dbaea7dead39f262993d46f2673389deedb0cb2779d191340ced38921ca731d527f60814305c555bf5e21619765ccd4c1c0a5fea73de96d3b471ca62e993f9544fe3a12bc4f5419940f1a5f0acdc7d402c071e48028d4648cd867d5d10b0b2bc6480827978ec89d454018df69ff3ebd240cbf356fcef697813ff2ee4dde46cdd5a29d2cbeaa8d54396332fc1c1586f262d1558396eab5b2b9ff877b76ee7250b634fc8fcb4be41ec4d2cc6c4e8ddecee2c499e8d4bdd0552bba1dba044f7fbe001b73b32933e709fd252263ced81a7d1fcb1abd89176c782898b414c891b5fe979cec66580c43613f5845713281e50c38dc0b1d96f58143f0ed3532a95ddb5",
    "0x4944b696203e8c161e5031007ffc075b5a7a7829f87b1118e6375d449ed6c6387112f786061dfad142807c7e2e1f7b08cc0a3199c4c0709647c3a3f46cc96927d4f2168e812d30fef3541feda0f71d171e037976e8631c0a5b83464a9a2d05336942ed99d55cf1459ca78a5f236a8f4c1680505d8699aa9189ded17394aca51ec5d1de02706b5340c0070491e8dc5de7cfe7fa3e57af4165ceb865ccddd1ae453382bce290c89fe664807e28105f736525707d1fc54244bc3b80414290a4cfc37761cc8583fce9a813906ed28669ecca7975d4450f40c5ed50ff2e70a4106cc8ea0131944ac33f9bc07a22550e01f90318d8411e45fe6d4b9ff25b33c3050a9c",
    "0xbeaef148f554f98d1ed4606d7f87d77d69c9d986ef984a3fb3179aa569c98214e24c6b86b419a9459c8ed093a42d25c7f3fcf1202b8c8c9d50faa17afa4e6ede2d87ea8cae180bf02309c8255cbaf709c0af3f087efd1fbbd099a6ce6b71b0b6ed47a0cb7d8feac0b31bc6fd2627b895b155b78747bed4509a92df592a228224c02ad63ceb391d270fcf1a8ee65ef7d7f1aaf943fb6285a8e68d53eed3233931d4be12ed51a8b0a43bf5680131752b3d7bb31c819d2f2d86e6693fd533969b4963c5456a605bc1bb9c3920679616d1bbb0d45c75d7ca5eaee310159ea87316315b71e20a93ba35e7e9dba83246cf4a6c588f4c6810dd8d2274ea37437eaa5cde",
    "0x83fc3e404fcfcface817ff888597b2a573c02acc2e26ca79a6fcb857e0d0fa3cc78e5eacbc0375b6476b76f1fa3a708f9fa2941212025b6e14effec82e97c00b810a8905e55bed1ffd81d783e23d397bb906094a43684f387a51b6c0873650091a1de0a9a38a7c357389b6249e1cd556a91d65acfaa9743a491a6f765c10f553bc6b72a06af5ce7a2e7434bf882b3e4ec451329440cda60551f7c005f2249be5ebf1997eb0ac36cca1965cd580f6c31419b819ed807f34ec0de31048fb3ae1159afb29c4ef0dc359fc7b227467db1243788e88ef212035d00f0e0f0ea5e231ae440358e2c9a1ecb763c6ccc04dd823220344e3102279fd0ce1c3c51dbd3f40b3",
    "0x5e75d6420d3702799710a096f37406493e5f637d1dae7986e79dee9eca9f3fdac9ef22b0e7a7e3809348e3709cc9c1d1746306108e9cf8e7be392049c10ff9c1a188d1bd14b75802b890c467c202cac71026d814f238fe2676dcda818a27b547cbc3b80fc09a577fd43d95e5d404b4cd362bf30d2a39ad059b623398c65bededdb63522c791d100a4408c898cd9fcbe32e7fe6c36c743d8e48b2548e1c00e4670ade6f82dcea9f9a3cf15e68b54b1c4c4ac43643fb276af10c817959e4e0d5b78469e4cd01faabb15368ec73332089a4abcdc0779e130468322d99426b9a2cc49eeaa8833227283a38863f2d7f83741b7f72db4cd40f5687360e8cb9478f57ea",
    "0x6cfa24b0bd34ae8ec7138bc076dacb4701f6d4e2ad74a4f9b659e3939a35cfb42508b505975139a4732ef45ae5782a9bc7678c79ca38a66eb6fe3aa472e0ac2ff30345b4a7a9e07a3f4ff9d311bd5732940ecc02d6825bddbedbf00a8f00523fed363f0512716c41a55e82496feb3195c60fc61cb315ecd6b06b2125f50939c7db44d8619a768c5bd0747e43f3cf1563533382812eb24df0af2a75cb9a93f6856f0569830457e651b0b1b52056c34c6793d9dab3556281848d75a7bb8a38186df31fece3b6129ced92f63fde4a43e29c2a691ae37599b5f72096666edf991273fdc316cad846ddede5b2bf7eba6ac9d9d15b1424404f27949e48b8591d814d74"];

    //Execute test 100 times
    for(let j = 0; j < 100; j++){

      //Deploy new contract
      instance = await PoseManager.new();
      receipt = await web3.eth.getTransactionReceipt(instance.transactionHash);
      gasLog.push({function:"deploy", gas:receipt.gasUsed});

      //Regsiter each enclave
      for(let i in preimages){
        //result = await instance.pkcs1Sha256VerifyRaw(preimages[i],signatures[i],e,N);
        // if(result == 0){
        //   console.log("Signature " + i + " is valid");
        // } else {
        //   console.log("Signature " + i + " is invalid");
        // }

        tx = await instance.register(accounts[i],dummyEncryptionKey,signatures[i],{from:accounts[i]});
        gasLog.push({
            function: "register",
            tag: "" + j + "-" + i,
            gas: tx.receipt.gasUsed
        });
        // console.log("Registration " + i + " is successful");
      }
    }
  });

  //Store measurements in file
  it("Write to file", async () => {
    require('fs').writeFileSync("./measurements/RSARegistration.json", JSON.stringify(gasLog, null, "  "));
  });

});
